<html >

    <!-- Begin Head -->
    <head >
        <meta charset="UTF-8"  /><meta name="author" content="Martin Walther - @tinuwalther"  />
        <meta name="keywords" content="Pode, PSHTML, PowerShell, Mermaid Diagram"  />
        <meta name="description" content="Builds beatuifull HTML-Files with PSHTML from native PowerShell-Scripts"  />
        
        <link rel="stylesheet" href="\assets\BootStrap\bootstrap.min.css"  />
        <link rel="stylesheet" href="\assets\style\style.css"  />
        <link rel="stylesheet" href='\assets\BootStrap\bootstrap-icons.css' '>

        <script src="\assets\BootStrap\bootstrap.bundle.min.js"  ></script>
        <script src="\assets\Chartjs\Chart.bundle.min.js"  >
        </script>
        
        <title >#PSRotaMaster</title><link type="image/x-icon" href="/assets/img/favicon.ico" rel="icon"  />

        <style>
            #calendar {
                max-width: 900px;
                margin: 30px auto;
            }
        </style>

    </head>
    <!-- End Head -->

    <!-- Begin Body -->
    <Body >
        <header >
            <div Class="jumbotron text-center" Id="j1" Style="padding:15; background-color:#012456"  >
                <p ><h1 >#PSRotaMaster - PS calendar</h1></p>
            </div>
        </header>
    
        <Section Id="section"  >
            <nav Class="navbar navbar-expand-sm bg-dark navbar-dark sticky-top"  >
                <div Class="container-fluid"  >
                    <a Class="navbar-brand" href="/" Target="_self"  >»HOME</a>
                    <button Class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#collapsibleNavbar"  >
                        <span Class="navbar-toggler-icon"  ></span>
                    </button>
                    <div Id="collapsibleNavbar" Class="collapse navbar-collapse"  >
                    <ul Class="navbar-nav"  >
                        <li Class="nav-item"  ><a Class="nav-link" href="https://github.com/tinuwalther/" Target="_blank"  >GitLab</a></li>
                        <li Class="nav-item"  ><a Class="nav-link" href="https://pshtml.readthedocs.io/en/latest/" Target="_blank"  >PSHTML</a></li>
                        <li Class="nav-item"  ><a Class="nav-link" href="https://www.w3schools.com/html/" Target="_blank"  >HTML</a></li>
                        <li Class="nav-item"  ><a Class="nav-link" href="https://getbootstrap.com/" Target="_blank"  >Bootstrap</a></li>
                        <li Class="nav-item"  ><a Class="nav-link" href="https://fullcalendar.io/" Target="_blank"  >Full calendar</a></li>
                    </ul>
                    </div>
                </div>
            </nav>
        
            <div Class="container"  >
                <article Id="CalendarBox">

                    <div id="events-log">
                        <h3>Events</h3>
                        <form action="/api/new-events" method="POST">
                            <label for="name">Name</label><br>
                            <input type="text" id="name" name="name"><br><br>

                            <label for="type">Typ der Abwesenheit</label><br>
                            <select id="type" name="type">
                                <option value="ferien">Ferien</option>
                                <option value="militaer">Militärdienst</option>
                                <option value="zivildienst">Zivildienst</option>
                                <option value="pikett">Pikettdienst</option>
                            </select><br><br>

                            <label for="start">Startdatum</label><br>
                            <input type="date" id="start" name="start"><br><br>

                            <label for="end">Enddatum</label><br>
                            <input type="date" id="end" name="end"><br><br>

                            <label for="submit">Action</label><br>
                            <input type="submit" value="Absenden">
                        </form>
                    </div>

                    <div id="calendar">

                        $(function Get-MonthCalendar{
                            <#
                            .SYNOPSIS
                                Generates a monthly calendar for a given month and year, displaying the days and calendar weeks.

                            .DESCRIPTION
                                The `Get-MonthCalendar` function creates a table representing the days of a specified month and year.
                                It calculates the corresponding week numbers and displays the days from Sunday to Saturday, 
                                starting each row with the corresponding calendar week. The function handles months with varying lengths
                                and adjusts for partial weeks at the start and end of the month.

                            .PARAMETER MonthName
                                The full name of the month (e.g., "January", "Februar"). This parameter is mandatory and must be a valid month name 
                                according to the system's current culture settings.

                            .PARAMETER Year
                                The year for which the calendar should be generated. This parameter is mandatory and must be a valid integer.

                            .EXAMPLE
                                Get-MonthCalendar -MonthName "March" -Year 2023
                                This will generate the calendar for March 2023, showing the days and corresponding week numbers.

                            .EXAMPLE
                                Get-MonthCalendar -MonthName "Oktober" -Year 2022
                                This will generate the calendar for October 2022, in accordance with German culture settings.

                            .NOTES
                                The function uses the system's current culture settings to interpret the month name and determine the first day of the week. 
                                It adjusts for varying month lengths and properly handles leap years. Calendar weeks are calculated based on the regional settings.
                            #>

                            [CmdletBinding()]
                            param(
                                [Parameter(Mandatory=$true)]
                                [string]$MonthName,
                                
                                [Parameter(Mandatory=$true)]
                                [Int] $Year
                            )

                            # Attempts to convert the month name into a valid month number
                            $currCulture   = [system.globalization.cultureinfo]::CurrentCulture
                            $MonthAsNumber = [datetime]::ParseExact($MonthName, 'MMMM', $currCulture).Month
                            
                            # Calculate the first- and the last day of the given year
                            $firstDayOfMonth = [datetime]::new($Year, $MonthAsNumber, 1)
                            $lastDayOfMonth = $firstDayOfMonth.AddMonths(1).AddDays(-1)

                            # Create a calendar object for the calculation of the calendar week
                            $calendar         = [System.Globalization.CultureInfo]::CurrentCulture.Calendar
                            $calendarWeekRule = [System.Globalization.CultureInfo]::CurrentCulture.DateTimeFormat.CalendarWeekRule
                            $firstDayOfWeek   = [System.Globalization.CultureInfo]::CurrentCulture.DateTimeFormat.FirstDayOfWeek

                            # Determine the actual day of the week for the first day of the month (0 = Sunday, 6 = Saturday)
                            $currentDayOfWeek = ($firstDayOfMonth.DayOfWeek + 7 - [int]$firstDayOfWeek) % 7

                            # Initialize Calendar as empty structure
                            $calendarRows = @()

                            # Create rows for calendar weeks
                            $week = @()    
                            for ($i = 0; $i -lt $currentDayOfWeek; $i++) {
                                $week += $null # Empty days before the 1st of the month
                            }

                            # Insert days of the month into the calendar
                            for ($day = 1; $day -le $lastDayOfMonth.Day; $day++) {
                                $currentDate = [datetime]::new($Year, $MonthAsNumber, $day)
                                $week += $day
                                if ($week.Count -eq 7) {
                                    # Calculate calendar week
                                    $currentWeekNumber = $calendar.GetWeekOfYear($currentDate, $calendarWeekRule, $firstDayOfWeek)

                                    # Add row when week full
                                    $calendarRows += [pscustomobject]@{
                                        Woche      = $currentWeekNumber
                                        Sonntag    = $week[0]
                                        Montag     = $week[1]
                                        Dienstag   = $week[2]
                                        Mittwoch   = $week[3]
                                        Donnerstag = $week[4]
                                        Freitag    = $week[5]
                                        Samstag    = $week[6]
                                        }
                                    $week = @()  # Start a new week
                                }
                            }

                            # Fill up the remaining days of the last week
                            if ($week.Count -gt 0) {
                                while ($week.Count -lt 7) {
                                    $week += $null  # Empty days after the end of the month
                                }

                                # Calendar week for the last day of the last week
                                $currentDate = [datetime]::new($Year, $MonthAsNumber, $lastDayOfMonth.Day)
                                $currentWeekNumber = $calendar.GetWeekOfYear($currentDate, $calendarWeekRule, $firstDayOfWeek)

                                $calendarRows += [pscustomobject]@{
                                    Woche      = $currentWeekNumber
                                    Sonntag    = $week[0]
                                    Montag     = $week[1]
                                    Dienstag   = $week[2]
                                    Mittwoch   = $week[3]
                                    Donnerstag = $week[4]
                                    Freitag    = $week[5]
                                    Samstag    = $week[6]
                                }
                            }

                            # Return Calendar
                            return $calendarRows
                        })
                        $(function Get-MonthAbbreviation {
                                <#
                                .SYNOPSIS
                                    Returns the abbreviated month name for a given full month name.

                                .DESCRIPTION
                                    The `Get-MonthAbbreviation` function takes a full month name (e.g., "January" or "Januar") as input and returns the corresponding abbreviated month name (e.g., "Jan").
                                    It uses the current culture settings of the system to interpret the month name and retrieve the abbreviated form.
                                    The function works for any valid month name in the system's current language and culture.

                                .PARAMETER MonthName
                                    The full name of the month as a string (e.g., "January", "Februar"). This parameter is mandatory.
                                    The month name must match the system's current culture setting (e.g., "English (United States)" or "German (Germany)").

                                .EXAMPLE
                                    Get-MonthAbbreviation -MonthName "March"
                                    This will return "Mar" if the current culture is English.

                                .EXAMPLE
                                    Get-MonthAbbreviation -MonthName "März"
                                    This will return "Mär" if the current culture is German.

                                .NOTES
                                    The function depends on the system's current culture settings, so the input and output month names are localized accordingly.
                                #>
                                param (
                                    [Parameter(Mandatory=$true)]
                                    [string]$MonthName
                                )

                                # Attempts to convert the month name into a valid month number
                                $currCulture   = [system.globalization.cultureinfo]::CurrentCulture
                                $MonthAsNumber = [datetime]::ParseExact($MonthName, 'MMMM', $currCulture).Month

                                # Retrieve monthly abbreviations
                                $monthAbbreviation = $currCulture.DateTimeFormat.AbbreviatedMonthNames[$MonthAsNumber - 1]

                                return $monthAbbreviation
                        })

                        $($Year  = Get-Date -f 'yyyy')
                        $($Month = Get-Date (Get-Date).AddMonths(-1) -f 'MMMM')

                        $($monthAbbreviation = Get-MonthAbbreviation -MonthName $Month)
                        $($MonthlyCalendar = Get-MonthCalendar -MonthName $Month -Year $Year | Select-Object @{N='Jahr';E={$Year}}, @{N='Monat';E={$monthAbbreviation}}, *)
                        $($SplatProperties = @{
                                TableClass = 'table table-dark table-striped-columns table-responsive table-striped table-hover'
                                TheadClass = 'thead-dark'
                                Properties = @('Woche','Sonntag','Montag','Dienstag','Mittwoch','Donnerstag','Freitag','Samstag')
                            }
                        )
                        <h1>$($Month) $($Year)</h1>
                        $($MonthlyCalendar | ConvertTo-PSHtmlTable @SplatProperties)

                        $($Month = Get-Date -f 'MMMM')

                        $($monthAbbreviation = Get-MonthAbbreviation -MonthName $Month)
                        $($MonthlyCalendar = Get-MonthCalendar -MonthName $Month -Year $Year | Select-Object @{N='Jahr';E={$Year}}, @{N='Monat';E={$monthAbbreviation}}, *)
                        $($SplatProperties = @{
                                TableClass = 'table table-dark table-striped-columns table-responsive table-striped table-hover'
                                TheadClass = 'thead-dark'
                                Properties = @('Woche','Sonntag','Montag','Dienstag','Mittwoch','Donnerstag','Freitag','Samstag')
                            }
                        )
                        <h1>$($Month) $($Year)</h1>
                        $($MonthlyCalendar | ConvertTo-PSHtmlTable @SplatProperties)

                        $($Month = Get-Date (Get-Date).AddMonths(+1) -f 'MMMM')

                        $($monthAbbreviation = Get-MonthAbbreviation -MonthName $Month)
                        $($MonthlyCalendar = Get-MonthCalendar -MonthName $Month -Year $Year | Select-Object @{N='Jahr';E={$Year}}, @{N='Monat';E={$monthAbbreviation}}, *)
                        $($SplatProperties = @{
                                TableClass = 'table table-dark table-striped-columns table-responsive table-striped table-hover'
                                TheadClass = 'thead-dark'
                                Properties = @('Woche','Sonntag','Montag','Dienstag','Mittwoch','Donnerstag','Freitag','Samstag')
                            }
                        )
                        <h1>$($Month) $($Year)</h1>
                        $($MonthlyCalendar | ConvertTo-PSHtmlTable @SplatProperties)
                    </div>
                </article>
            </div>
        </Section>
    
    </Body>
    <!-- End Body -->
 
    <!-- Begin Footer -->
    <footer>
        <div Class="container-fluid"  >

            <div Class="row align-items-center"  >

                <div Class="col-md"  >
                    <p >
                        <a Class="btn-sm btn btn-outline-success" href="#" Target="_self"  >I ♥ PS ></a>
                    </p>
                </div>
                    
                <div Class="col-md"  >
                    <p >
                        <a href="https://www.powershellgallery.com/packages/Pode" Target="_blank"  >pode</a> and <a href="https://www.powershellgallery.com/packages/PSHTML" Target="_blank"  >PSHTML</a>
                    </p>
                </div>

                <div Class="col-md" Style="color:#000"  >
                    <p >Created at 2024-09-15 10:57:33</p>
                </div>

            </div>

        </div>
    </footer>
    <!--End Footer -->

</html>
